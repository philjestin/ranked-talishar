// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Chat() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div hx-ext=\"ws\" ws-connect=\"http://localhost:8000/wss\">Websocket status: <span id=\"status\"></span><div id=\"notifications\" hs-swap-oob=\"beforehand\">New Message received</div><div id=\"chat_room\" hs-swap-oob=\"morphdom\"></div><form id=\"form\" ws-send hx-on::after-request=\"this.reset()\"><input type=\"hidden\" name=\"username\" value=\" {{ .username}}\"><div class=\"is-flex is-align-items-center\"><div class=\"field is-flex-grow-1 mr-4\"><textarea rows=\"2\" name=\"message\" placeholder=\"Say something\" required></textarea></div><div class=\"field\"><button type=\"submit\" id=\"send\"><i class=\"fa-solid fa-paper-plane\"></i>&nbsp;SEND</button></div></div></form></div><script type=\"text/javascript\" defer>\n\t\tlet status = document.getElementById('status');\n\n\t\tlet socket;\n\t\tlet elt;\n\n\t\tdocument.addEventListener(\"DOMContentLoaded\", function() {\n\t\t\tconsole.log(\"DOMContentLoaded\")\n\t\t\tconst socket = new WebSocket(\"http://localhost:8000/ws\");\n\t\t\tsocket.onopen = (event) => {\n\t\t\t\tstatus.innerText = \"Connected from new websocket\"\n\t\t\t}\n\t\t});\n\n\t\tconsole.log(\"test\")\n\n\t\tdocument.addEventListener(\"visibilitychange\", function(evt) {\n\t\t\tconsole.log('visibilitychange', document.visibilityState);\n\t\t\tif (socket) {\n\t\t\t\tsocket.send(document.visibilityState, elt);\n\t\t\t}\n\t\t});\n\n\t\tdocument.body.addEventListener('htmx:wsOpen', function(evt) {\n\t\t\tconsole.log('connected');\n\t\t\t\n\t\t\tsocket = evt.detail.socketWrapper;\n\t\t\telt = evt.detail.elt;\n\n\t\t\tstatus.innerText = 'Connected';\n\t\t\tstatus.setAttribute('data-status', 'connected');\n\t\t});\n\t\tdocument.body.addEventListener('htmx:wsClose', function(evt) {\n\t\t\tconsole.log('disconnected');\n\t\t\tstatus.innerText = 'Disconnected';\n\t\t\tstatus.setAttribute('data-status', 'disconnected');\n\t\t});\n\t</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
